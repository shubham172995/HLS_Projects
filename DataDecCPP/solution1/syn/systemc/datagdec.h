// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _datagdec_HH_
#define _datagdec_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "datagdec_t.h"

namespace ap_rtl {

struct datagdec : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<128> > din_TDATA;
    sc_out< sc_logic > din_TVALID;
    sc_in< sc_logic > din_TREADY;
    sc_out< sc_logic > din_TLAST;
    sc_out< sc_lv<32> > control_V_TDATA;
    sc_out< sc_logic > control_V_TVALID;
    sc_in< sc_logic > control_V_TREADY;
    sc_out< sc_lv<8> > din_words_TDATA;
    sc_out< sc_logic > din_words_TVALID;
    sc_in< sc_logic > din_words_TREADY;
    sc_out< sc_logic > din_words_TLAST;
    sc_out< sc_lv<8> > dout_words_TDATA;
    sc_out< sc_logic > dout_words_TVALID;
    sc_in< sc_logic > dout_words_TREADY;
    sc_out< sc_logic > dout_words_TLAST;


    // Module declarations
    datagdec(sc_module_name name);
    SC_HAS_PROCESS(datagdec);

    ~datagdec();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    datagdec_t* t_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<128> > din_V_data_V_1_data_out;
    sc_signal< sc_logic > din_V_data_V_1_vld_in;
    sc_signal< sc_logic > din_V_data_V_1_vld_out;
    sc_signal< sc_logic > din_V_data_V_1_ack_in;
    sc_signal< sc_logic > din_V_data_V_1_ack_out;
    sc_signal< sc_lv<128> > din_V_data_V_1_payload_A;
    sc_signal< sc_lv<128> > din_V_data_V_1_payload_B;
    sc_signal< sc_logic > din_V_data_V_1_sel_rd;
    sc_signal< sc_logic > din_V_data_V_1_sel_wr;
    sc_signal< sc_logic > din_V_data_V_1_sel;
    sc_signal< sc_logic > din_V_data_V_1_load_A;
    sc_signal< sc_logic > din_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > din_V_data_V_1_state;
    sc_signal< sc_logic > din_V_data_V_1_state_cmp_full;
    sc_signal< sc_logic > din_V_tlast_1_data_out;
    sc_signal< sc_logic > din_V_tlast_1_vld_in;
    sc_signal< sc_logic > din_V_tlast_1_vld_out;
    sc_signal< sc_logic > din_V_tlast_1_ack_in;
    sc_signal< sc_logic > din_V_tlast_1_ack_out;
    sc_signal< sc_logic > din_V_tlast_1_payload_A;
    sc_signal< sc_logic > din_V_tlast_1_payload_B;
    sc_signal< sc_logic > din_V_tlast_1_sel_rd;
    sc_signal< sc_logic > din_V_tlast_1_sel_wr;
    sc_signal< sc_logic > din_V_tlast_1_sel;
    sc_signal< sc_logic > din_V_tlast_1_load_A;
    sc_signal< sc_logic > din_V_tlast_1_load_B;
    sc_signal< sc_lv<2> > din_V_tlast_1_state;
    sc_signal< sc_logic > din_V_tlast_1_state_cmp_full;
    sc_signal< sc_lv<32> > control_V_1_data_out;
    sc_signal< sc_logic > control_V_1_vld_in;
    sc_signal< sc_logic > control_V_1_vld_out;
    sc_signal< sc_logic > control_V_1_ack_in;
    sc_signal< sc_logic > control_V_1_ack_out;
    sc_signal< sc_logic > control_V_1_sel_rd;
    sc_signal< sc_logic > control_V_1_sel;
    sc_signal< sc_lv<2> > control_V_1_state;
    sc_signal< sc_lv<8> > din_words_V_data_V_1_data_out;
    sc_signal< sc_logic > din_words_V_data_V_1_vld_in;
    sc_signal< sc_logic > din_words_V_data_V_1_vld_out;
    sc_signal< sc_logic > din_words_V_data_V_1_ack_in;
    sc_signal< sc_logic > din_words_V_data_V_1_ack_out;
    sc_signal< sc_logic > din_words_V_data_V_1_sel_rd;
    sc_signal< sc_logic > din_words_V_data_V_1_sel;
    sc_signal< sc_lv<2> > din_words_V_data_V_1_state;
    sc_signal< sc_logic > din_words_V_tlast_1_data_out;
    sc_signal< sc_logic > din_words_V_tlast_1_vld_in;
    sc_signal< sc_logic > din_words_V_tlast_1_vld_out;
    sc_signal< sc_logic > din_words_V_tlast_1_ack_in;
    sc_signal< sc_logic > din_words_V_tlast_1_ack_out;
    sc_signal< sc_logic > din_words_V_tlast_1_sel_rd;
    sc_signal< sc_logic > din_words_V_tlast_1_sel;
    sc_signal< sc_lv<2> > din_words_V_tlast_1_state;
    sc_signal< sc_lv<8> > dout_words_V_data_V_1_data_out;
    sc_signal< sc_logic > dout_words_V_data_V_1_vld_in;
    sc_signal< sc_logic > dout_words_V_data_V_1_vld_out;
    sc_signal< sc_logic > dout_words_V_data_V_1_ack_in;
    sc_signal< sc_logic > dout_words_V_data_V_1_ack_out;
    sc_signal< sc_logic > dout_words_V_data_V_1_sel_rd;
    sc_signal< sc_logic > dout_words_V_data_V_1_sel;
    sc_signal< sc_lv<2> > dout_words_V_data_V_1_state;
    sc_signal< sc_logic > dout_words_V_tlast_1_data_out;
    sc_signal< sc_logic > dout_words_V_tlast_1_vld_in;
    sc_signal< sc_logic > dout_words_V_tlast_1_vld_out;
    sc_signal< sc_logic > dout_words_V_tlast_1_ack_in;
    sc_signal< sc_logic > dout_words_V_tlast_1_ack_out;
    sc_signal< sc_logic > dout_words_V_tlast_1_sel_rd;
    sc_signal< sc_logic > dout_words_V_tlast_1_sel;
    sc_signal< sc_lv<2> > dout_words_V_tlast_1_state;
    sc_signal< sc_lv<3> > t_address0;
    sc_signal< sc_logic > t_ce0;
    sc_signal< sc_lv<1> > t_q0;
    sc_signal< sc_logic > din_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > control_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > din_words_TDATA_blk_n;
    sc_signal< sc_logic > dout_words_TDATA_blk_n;
    sc_signal< sc_lv<4> > i_fu_134_p2;
    sc_signal< sc_lv<4> > i_reg_163;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<1> > tmp_tlast_fu_140_p2;
    sc_signal< sc_lv<1> > tmp_tlast_reg_168;
    sc_signal< sc_lv<1> > exitcond_fu_128_p2;
    sc_signal< sc_lv<128> > dat_data_V_fu_151_p3;
    sc_signal< sc_lv<4> > i2_reg_117;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<64> > tmp_3_fu_146_p1;
    sc_signal< bool > ap_block_state1_io;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<128> ap_const_lv128_lc_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state1_io();
    void thread_ap_block_state2_io();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_control_V_1_ack_in();
    void thread_control_V_1_ack_out();
    void thread_control_V_1_data_out();
    void thread_control_V_1_sel();
    void thread_control_V_1_vld_in();
    void thread_control_V_1_vld_out();
    void thread_control_V_TDATA();
    void thread_control_V_TDATA_blk_n();
    void thread_control_V_TVALID();
    void thread_dat_data_V_fu_151_p3();
    void thread_din_TDATA();
    void thread_din_TDATA_blk_n();
    void thread_din_TLAST();
    void thread_din_TVALID();
    void thread_din_V_data_V_1_ack_in();
    void thread_din_V_data_V_1_ack_out();
    void thread_din_V_data_V_1_data_out();
    void thread_din_V_data_V_1_load_A();
    void thread_din_V_data_V_1_load_B();
    void thread_din_V_data_V_1_sel();
    void thread_din_V_data_V_1_state_cmp_full();
    void thread_din_V_data_V_1_vld_in();
    void thread_din_V_data_V_1_vld_out();
    void thread_din_V_tlast_1_ack_in();
    void thread_din_V_tlast_1_ack_out();
    void thread_din_V_tlast_1_data_out();
    void thread_din_V_tlast_1_load_A();
    void thread_din_V_tlast_1_load_B();
    void thread_din_V_tlast_1_sel();
    void thread_din_V_tlast_1_state_cmp_full();
    void thread_din_V_tlast_1_vld_in();
    void thread_din_V_tlast_1_vld_out();
    void thread_din_words_TDATA();
    void thread_din_words_TDATA_blk_n();
    void thread_din_words_TLAST();
    void thread_din_words_TVALID();
    void thread_din_words_V_data_V_1_ack_in();
    void thread_din_words_V_data_V_1_ack_out();
    void thread_din_words_V_data_V_1_data_out();
    void thread_din_words_V_data_V_1_sel();
    void thread_din_words_V_data_V_1_vld_in();
    void thread_din_words_V_data_V_1_vld_out();
    void thread_din_words_V_tlast_1_ack_in();
    void thread_din_words_V_tlast_1_ack_out();
    void thread_din_words_V_tlast_1_data_out();
    void thread_din_words_V_tlast_1_sel();
    void thread_din_words_V_tlast_1_vld_in();
    void thread_din_words_V_tlast_1_vld_out();
    void thread_dout_words_TDATA();
    void thread_dout_words_TDATA_blk_n();
    void thread_dout_words_TLAST();
    void thread_dout_words_TVALID();
    void thread_dout_words_V_data_V_1_ack_in();
    void thread_dout_words_V_data_V_1_ack_out();
    void thread_dout_words_V_data_V_1_data_out();
    void thread_dout_words_V_data_V_1_sel();
    void thread_dout_words_V_data_V_1_vld_in();
    void thread_dout_words_V_data_V_1_vld_out();
    void thread_dout_words_V_tlast_1_ack_in();
    void thread_dout_words_V_tlast_1_ack_out();
    void thread_dout_words_V_tlast_1_data_out();
    void thread_dout_words_V_tlast_1_sel();
    void thread_dout_words_V_tlast_1_vld_in();
    void thread_dout_words_V_tlast_1_vld_out();
    void thread_exitcond_fu_128_p2();
    void thread_i_fu_134_p2();
    void thread_t_address0();
    void thread_t_ce0();
    void thread_tmp_3_fu_146_p1();
    void thread_tmp_tlast_fu_140_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
